{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyne_\\\\OneDrive\\\\Desktop\\\\WD12\\\\Discussions\\\\react-javascript-main\\\\src\\\\pages\\\\PrimeNumbers.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrimeNumbers() {\n  _s();\n\n  const [input, setInput] = useState(1);\n\n  const checkIfPrimeNumber = number => {\n    let isPrime = true; // Check if letter or null\n\n    if (isNaN(number) || !number) {\n      return \"Please enter a number\";\n    } // Check if less than 1\n    else if (parseInt(number) < 1) {\n      return \"The number is NOT a prime number\";\n    } // Check if equal to 1\n    else if (parseInt(number) === 1) {\n      return \"1 is neither prime nor composite number\";\n    } // Check if number is greater than 1\n    else {\n      for (let i = 2; i < parseInt(number); i++) {\n        if (parseInt(number) % i === 0) {\n          isPrime = false;\n          break;\n        }\n      }\n\n      return isPrime ? `${number} is a prime number` : `${number} is NOT a prime number`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-100 lead\",\n          type: \"text\",\n          placeholder: \"Input\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-5\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-100 lead text-primary\",\n          type: \"text\",\n          placeholder: \"Output\",\n          readOnly: true,\n          value: checkIfPrimeNumber(input)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrimeNumbers, \"RWw0rjBJDGRvjxcnRXCQ/ioFlvE=\");\n\n_c = PrimeNumbers;\nexport default PrimeNumbers;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrimeNumbers\");","map":{"version":3,"names":["React","useState","PrimeNumbers","input","setInput","checkIfPrimeNumber","number","isPrime","isNaN","parseInt","i","e","target","value"],"sources":["C:/Users/Cyne_/OneDrive/Desktop/WD12/Discussions/react-javascript-main/src/pages/PrimeNumbers.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nfunction PrimeNumbers() {\n  const [input, setInput] = useState(1);\n\n  const checkIfPrimeNumber = (number) => {\n    let isPrime = true;\n\n    // Check if letter or null\n    if (isNaN(number) || !number) {\n      return \"Please enter a number\";\n    }\n\n    // Check if less than 1\n    else if (parseInt(number) < 1) {\n      return \"The number is NOT a prime number\";\n    }\n\n    // Check if equal to 1\n    else if (parseInt(number) === 1) {\n      return \"1 is neither prime nor composite number\";\n    }\n\n    // Check if number is greater than 1\n    else {\n      for (let i = 2; i < parseInt(number); i++) {\n        if (parseInt(number) % i === 0) {\n          isPrime = false;\n          break;\n        }\n      }\n\n      return isPrime\n        ? `${number} is a prime number`\n        : `${number} is NOT a prime number`;\n    }\n  };\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <input\n            className=\"w-100 lead\"\n            type=\"text\"\n            placeholder=\"Input\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          />\n        </div>\n        <div className=\"col-md-5\">\n          <textarea\n            className=\"w-100 lead text-primary\"\n            type=\"text\"\n            placeholder=\"Output\"\n            readOnly={true}\n            value={checkIfPrimeNumber(input)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PrimeNumbers;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;;EAEA,MAAMI,kBAAkB,GAAIC,MAAD,IAAY;IACrC,IAAIC,OAAO,GAAG,IAAd,CADqC,CAGrC;;IACA,IAAIC,KAAK,CAACF,MAAD,CAAL,IAAiB,CAACA,MAAtB,EAA8B;MAC5B,OAAO,uBAAP;IACD,CAFD,CAIA;IAJA,KAKK,IAAIG,QAAQ,CAACH,MAAD,CAAR,GAAmB,CAAvB,EAA0B;MAC7B,OAAO,kCAAP;IACD,CAFI,CAIL;IAJK,KAKA,IAAIG,QAAQ,CAACH,MAAD,CAAR,KAAqB,CAAzB,EAA4B;MAC/B,OAAO,yCAAP;IACD,CAFI,CAIL;IAJK,KAKA;MACH,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACH,MAAD,CAA5B,EAAsCI,CAAC,EAAvC,EAA2C;QACzC,IAAID,QAAQ,CAACH,MAAD,CAAR,GAAmBI,CAAnB,KAAyB,CAA7B,EAAgC;UAC9BH,OAAO,GAAG,KAAV;UACA;QACD;MACF;;MAED,OAAOA,OAAO,GACT,GAAED,MAAO,oBADA,GAET,GAAEA,MAAO,wBAFd;IAGD;EACF,CA/BD;;EAiCA,oBACE;IAAK,SAAS,EAAC,eAAf;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE;UACE,SAAS,EAAC,YADZ;UAEE,IAAI,EAAC,MAFP;UAGE,WAAW,EAAC,OAHd;UAIE,KAAK,EAAEH,KAJT;UAKE,QAAQ,EAAGQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;QAL3B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE;UACE,SAAS,EAAC,yBADZ;UAEE,IAAI,EAAC,MAFP;UAGE,WAAW,EAAC,QAHd;UAIE,QAAQ,EAAE,IAJZ;UAKE,KAAK,EAAER,kBAAkB,CAACF,KAAD;QAL3B;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GA5DQD,Y;;KAAAA,Y;AA8DT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}